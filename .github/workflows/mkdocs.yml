name: Build and Deploy MkDocs

on:
  push:
    branches: [ main ]
    paths: 
      - 'AvatarSceneBrowser/**'
      - 'index.html'
      - 'README.md'
  pull_request:
    branches: [ main ]
    paths: 
      - 'AvatarSceneBrowser/**'
      - 'index.html'
      - 'README.md'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Configure Git Credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        cd AvatarSceneBrowser
        pip install -r requirements.txt
        
    - name: Build MkDocs
      run: |
        cd AvatarSceneBrowser
        mkdocs build --verbose
        
    - name: Prepare deployment structure
      run: |
        # 创建部署目录结构
        mkdir -p deploy_site/AvatarSceneBrowser
        
        # 复制现有的根目录文件（保持主页不变）
        if [ -f "index.html" ]; then
          cp index.html deploy_site/
          echo "✅ Copied index.html to deploy_site/"
        else
          echo "❌ index.html not found in root"
        fi
        if [ -f "README.md" ]; then
          cp README.md deploy_site/
          echo "✅ Copied README.md to deploy_site/"
        fi
        
        # 检查MkDocs构建结果
        echo "📁 Contents of AvatarSceneBrowser/site/:"
        ls -la AvatarSceneBrowser/site/ || echo "❌ AvatarSceneBrowser/site/ not found"
        
        # 复制MkDocs构建的文件到子目录
        if [ -d "AvatarSceneBrowser/site" ] && [ "$(ls -A AvatarSceneBrowser/site)" ]; then
          cp -r AvatarSceneBrowser/site/* deploy_site/AvatarSceneBrowser/
          echo "✅ Copied MkDocs site to deploy_site/AvatarSceneBrowser/"
        else
          echo "❌ AvatarSceneBrowser/site/ is empty or doesn't exist"
        fi
        
        # 显示最终部署结构
        echo "📁 Final deployment structure:"
        find deploy_site -type f | head -20
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: deploy_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}AvatarSceneBrowser/
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 